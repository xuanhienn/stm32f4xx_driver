
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004a4  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800064c  08000654  00010654  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800064c  0800064c  00010654  2**0
                  CONTENTS
  4 .ARM          00000000  0800064c  0800064c  00010654  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800064c  08000654  00010654  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800064c  0800064c  0001064c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000650  08000650  00010650  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010654  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010654  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010654  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000b07  00000000  00000000  00010684  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000239  00000000  00000000  0001118b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  000113c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000098  00000000  00000000  00011488  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000014ec  00000000  00000000  00011520  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000d9b  00000000  00000000  00012a0c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000577a  00000000  00000000  000137a7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  00018f21  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000244  00000000  00000000  00018f74  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000634 	.word	0x08000634

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000634 	.word	0x08000634

080001e8 <SPI2_GPIOInits>:
// PB15 -> MOSI
// PB14 -> MISO
// PB13 -> SCLK
// PB12 -> NSS
void SPI2_GPIOInits(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b084      	sub	sp, #16
 80001ec:	af00      	add	r7, sp, #0
	GPIO_Handle_t pGPIOHandle;
	pGPIOHandle.pGPIOx = GPIOB;
 80001ee:	4b14      	ldr	r3, [pc, #80]	; (8000240 <SPI2_GPIOInits+0x58>)
 80001f0:	607b      	str	r3, [r7, #4]
	pGPIOHandle.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 80001f2:	2302      	movs	r3, #2
 80001f4:	727b      	strb	r3, [r7, #9]
	pGPIOHandle.GPIO_PinConfig.GPIO_PinAltFunMode = 5;
 80001f6:	2305      	movs	r3, #5
 80001f8:	737b      	strb	r3, [r7, #13]
	pGPIOHandle.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80001fa:	2300      	movs	r3, #0
 80001fc:	733b      	strb	r3, [r7, #12]
	pGPIOHandle.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80001fe:	2300      	movs	r3, #0
 8000200:	72fb      	strb	r3, [r7, #11]
	pGPIOHandle.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_HIGH;
 8000202:	2303      	movs	r3, #3
 8000204:	72bb      	strb	r3, [r7, #10]

	//sclk
	pGPIOHandle.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000206:	230d      	movs	r3, #13
 8000208:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&pGPIOHandle);
 800020a:	1d3b      	adds	r3, r7, #4
 800020c:	4618      	mov	r0, r3
 800020e:	f000 f84b 	bl	80002a8 <GPIO_Init>

	//MOSI
	pGPIOHandle.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_15;
 8000212:	230f      	movs	r3, #15
 8000214:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&pGPIOHandle);
 8000216:	1d3b      	adds	r3, r7, #4
 8000218:	4618      	mov	r0, r3
 800021a:	f000 f845 	bl	80002a8 <GPIO_Init>

	//MISO
	pGPIOHandle.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_14;
 800021e:	230e      	movs	r3, #14
 8000220:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&pGPIOHandle);
 8000222:	1d3b      	adds	r3, r7, #4
 8000224:	4618      	mov	r0, r3
 8000226:	f000 f83f 	bl	80002a8 <GPIO_Init>

	//NSS
	pGPIOHandle.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800022a:	230c      	movs	r3, #12
 800022c:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&pGPIOHandle);
 800022e:	1d3b      	adds	r3, r7, #4
 8000230:	4618      	mov	r0, r3
 8000232:	f000 f839 	bl	80002a8 <GPIO_Init>
}
 8000236:	bf00      	nop
 8000238:	3710      	adds	r7, #16
 800023a:	46bd      	mov	sp, r7
 800023c:	bd80      	pop	{r7, pc}
 800023e:	bf00      	nop
 8000240:	40020400 	.word	0x40020400

08000244 <main>:
{
	SPI_Handle_t SPIHandle;
	SPIHandle.pSPIx = SPI2;
}
int main(void)
{
 8000244:	b580      	push	{r7, lr}
 8000246:	af00      	add	r7, sp, #0
    SPI2_GPIOInits();
 8000248:	f7ff ffce 	bl	80001e8 <SPI2_GPIOInits>
    return 0;
 800024c:	2300      	movs	r3, #0
}
 800024e:	4618      	mov	r0, r3
 8000250:	bd80      	pop	{r7, pc}
	...

08000254 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000254:	480d      	ldr	r0, [pc, #52]	; (800028c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000256:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000258:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800025c:	480c      	ldr	r0, [pc, #48]	; (8000290 <LoopForever+0x6>)
  ldr r1, =_edata
 800025e:	490d      	ldr	r1, [pc, #52]	; (8000294 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000260:	4a0d      	ldr	r2, [pc, #52]	; (8000298 <LoopForever+0xe>)
  movs r3, #0
 8000262:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000264:	e002      	b.n	800026c <LoopCopyDataInit>

08000266 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000266:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000268:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800026a:	3304      	adds	r3, #4

0800026c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800026c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800026e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000270:	d3f9      	bcc.n	8000266 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000272:	4a0a      	ldr	r2, [pc, #40]	; (800029c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000274:	4c0a      	ldr	r4, [pc, #40]	; (80002a0 <LoopForever+0x16>)
  movs r3, #0
 8000276:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000278:	e001      	b.n	800027e <LoopFillZerobss>

0800027a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800027a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800027c:	3204      	adds	r2, #4

0800027e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800027e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000280:	d3fb      	bcc.n	800027a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000282:	f000 f9b3 	bl	80005ec <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000286:	f7ff ffdd 	bl	8000244 <main>

0800028a <LoopForever>:

LoopForever:
  b LoopForever
 800028a:	e7fe      	b.n	800028a <LoopForever>
  ldr   r0, =_estack
 800028c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000290:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000294:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000298:	08000654 	.word	0x08000654
  ldr r2, =_sbss
 800029c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002a0:	2000001c 	.word	0x2000001c

080002a4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a4:	e7fe      	b.n	80002a4 <ADC_IRQHandler>
	...

080002a8 <GPIO_Init>:
	}
}
//

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80002a8:	b480      	push	{r7}
 80002aa:	b087      	sub	sp, #28
 80002ac:	af00      	add	r7, sp, #0
 80002ae:	6078      	str	r0, [r7, #4]
	//1. configure the mode of the gpio pin
	uint32_t temp = 0; //temp register
 80002b0:	2300      	movs	r3, #0
 80002b2:	617b      	str	r3, [r7, #20]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80002b4:	687b      	ldr	r3, [r7, #4]
 80002b6:	795b      	ldrb	r3, [r3, #5]
 80002b8:	2b03      	cmp	r3, #3
 80002ba:	d81f      	bhi.n	80002fc <GPIO_Init+0x54>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	795b      	ldrb	r3, [r3, #5]
 80002c0:	461a      	mov	r2, r3
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	791b      	ldrb	r3, [r3, #4]
 80002c6:	005b      	lsls	r3, r3, #1
 80002c8:	fa02 f303 	lsl.w	r3, r2, r3
 80002cc:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	681b      	ldr	r3, [r3, #0]
 80002d2:	681a      	ldr	r2, [r3, #0]
 80002d4:	687b      	ldr	r3, [r7, #4]
 80002d6:	791b      	ldrb	r3, [r3, #4]
 80002d8:	4619      	mov	r1, r3
 80002da:	2303      	movs	r3, #3
 80002dc:	408b      	lsls	r3, r1
 80002de:	43db      	mvns	r3, r3
 80002e0:	4619      	mov	r1, r3
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	681b      	ldr	r3, [r3, #0]
 80002e6:	400a      	ands	r2, r1
 80002e8:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	681b      	ldr	r3, [r3, #0]
 80002ee:	6819      	ldr	r1, [r3, #0]
 80002f0:	687b      	ldr	r3, [r7, #4]
 80002f2:	681b      	ldr	r3, [r3, #0]
 80002f4:	697a      	ldr	r2, [r7, #20]
 80002f6:	430a      	orrs	r2, r1
 80002f8:	601a      	str	r2, [r3, #0]
 80002fa:	e0ca      	b.n	8000492 <GPIO_Init+0x1ea>

	}
	else
	{
		// we will be right back
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	795b      	ldrb	r3, [r3, #5]
 8000300:	2b04      	cmp	r3, #4
 8000302:	d117      	bne.n	8000334 <GPIO_Init+0x8c>
		{
			//1. Configure the FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000304:	4b4a      	ldr	r3, [pc, #296]	; (8000430 <GPIO_Init+0x188>)
 8000306:	68db      	ldr	r3, [r3, #12]
 8000308:	687a      	ldr	r2, [r7, #4]
 800030a:	7912      	ldrb	r2, [r2, #4]
 800030c:	4611      	mov	r1, r2
 800030e:	2201      	movs	r2, #1
 8000310:	408a      	lsls	r2, r1
 8000312:	4611      	mov	r1, r2
 8000314:	4a46      	ldr	r2, [pc, #280]	; (8000430 <GPIO_Init+0x188>)
 8000316:	430b      	orrs	r3, r1
 8000318:	60d3      	str	r3, [r2, #12]
			// clear the corresponding RTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800031a:	4b45      	ldr	r3, [pc, #276]	; (8000430 <GPIO_Init+0x188>)
 800031c:	689b      	ldr	r3, [r3, #8]
 800031e:	687a      	ldr	r2, [r7, #4]
 8000320:	7912      	ldrb	r2, [r2, #4]
 8000322:	4611      	mov	r1, r2
 8000324:	2201      	movs	r2, #1
 8000326:	408a      	lsls	r2, r1
 8000328:	43d2      	mvns	r2, r2
 800032a:	4611      	mov	r1, r2
 800032c:	4a40      	ldr	r2, [pc, #256]	; (8000430 <GPIO_Init+0x188>)
 800032e:	400b      	ands	r3, r1
 8000330:	6093      	str	r3, [r2, #8]
 8000332:	e035      	b.n	80003a0 <GPIO_Init+0xf8>
		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	795b      	ldrb	r3, [r3, #5]
 8000338:	2b05      	cmp	r3, #5
 800033a:	d117      	bne.n	800036c <GPIO_Init+0xc4>
		{
			//2. configure the RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800033c:	4b3c      	ldr	r3, [pc, #240]	; (8000430 <GPIO_Init+0x188>)
 800033e:	689b      	ldr	r3, [r3, #8]
 8000340:	687a      	ldr	r2, [r7, #4]
 8000342:	7912      	ldrb	r2, [r2, #4]
 8000344:	4611      	mov	r1, r2
 8000346:	2201      	movs	r2, #1
 8000348:	408a      	lsls	r2, r1
 800034a:	4611      	mov	r1, r2
 800034c:	4a38      	ldr	r2, [pc, #224]	; (8000430 <GPIO_Init+0x188>)
 800034e:	430b      	orrs	r3, r1
 8000350:	6093      	str	r3, [r2, #8]
			// clear the corresponding FTSR bit
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000352:	4b37      	ldr	r3, [pc, #220]	; (8000430 <GPIO_Init+0x188>)
 8000354:	689b      	ldr	r3, [r3, #8]
 8000356:	687a      	ldr	r2, [r7, #4]
 8000358:	7912      	ldrb	r2, [r2, #4]
 800035a:	4611      	mov	r1, r2
 800035c:	2201      	movs	r2, #1
 800035e:	408a      	lsls	r2, r1
 8000360:	43d2      	mvns	r2, r2
 8000362:	4611      	mov	r1, r2
 8000364:	4a32      	ldr	r2, [pc, #200]	; (8000430 <GPIO_Init+0x188>)
 8000366:	400b      	ands	r3, r1
 8000368:	6093      	str	r3, [r2, #8]
 800036a:	e019      	b.n	80003a0 <GPIO_Init+0xf8>
		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	795b      	ldrb	r3, [r3, #5]
 8000370:	2b06      	cmp	r3, #6
 8000372:	d115      	bne.n	80003a0 <GPIO_Init+0xf8>
		{
			//3. configure both the FTSR and RTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000374:	4b2e      	ldr	r3, [pc, #184]	; (8000430 <GPIO_Init+0x188>)
 8000376:	68db      	ldr	r3, [r3, #12]
 8000378:	687a      	ldr	r2, [r7, #4]
 800037a:	7912      	ldrb	r2, [r2, #4]
 800037c:	4611      	mov	r1, r2
 800037e:	2201      	movs	r2, #1
 8000380:	408a      	lsls	r2, r1
 8000382:	4611      	mov	r1, r2
 8000384:	4a2a      	ldr	r2, [pc, #168]	; (8000430 <GPIO_Init+0x188>)
 8000386:	430b      	orrs	r3, r1
 8000388:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800038a:	4b29      	ldr	r3, [pc, #164]	; (8000430 <GPIO_Init+0x188>)
 800038c:	689b      	ldr	r3, [r3, #8]
 800038e:	687a      	ldr	r2, [r7, #4]
 8000390:	7912      	ldrb	r2, [r2, #4]
 8000392:	4611      	mov	r1, r2
 8000394:	2201      	movs	r2, #1
 8000396:	408a      	lsls	r2, r1
 8000398:	4611      	mov	r1, r2
 800039a:	4a25      	ldr	r2, [pc, #148]	; (8000430 <GPIO_Init+0x188>)
 800039c:	430b      	orrs	r3, r1
 800039e:	6093      	str	r3, [r2, #8]
		}
		//2. configure the GPIO port selection in SYSCFG_EXTIR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	791b      	ldrb	r3, [r3, #4]
 80003a4:	089b      	lsrs	r3, r3, #2
 80003a6:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	791b      	ldrb	r3, [r3, #4]
 80003ac:	f003 0303 	and.w	r3, r3, #3
 80003b0:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	681b      	ldr	r3, [r3, #0]
 80003b6:	4a1f      	ldr	r2, [pc, #124]	; (8000434 <GPIO_Init+0x18c>)
 80003b8:	4293      	cmp	r3, r2
 80003ba:	d04d      	beq.n	8000458 <GPIO_Init+0x1b0>
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	4a1d      	ldr	r2, [pc, #116]	; (8000438 <GPIO_Init+0x190>)
 80003c2:	4293      	cmp	r3, r2
 80003c4:	d032      	beq.n	800042c <GPIO_Init+0x184>
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	681b      	ldr	r3, [r3, #0]
 80003ca:	4a1c      	ldr	r2, [pc, #112]	; (800043c <GPIO_Init+0x194>)
 80003cc:	4293      	cmp	r3, r2
 80003ce:	d02b      	beq.n	8000428 <GPIO_Init+0x180>
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	681b      	ldr	r3, [r3, #0]
 80003d4:	4a1a      	ldr	r2, [pc, #104]	; (8000440 <GPIO_Init+0x198>)
 80003d6:	4293      	cmp	r3, r2
 80003d8:	d024      	beq.n	8000424 <GPIO_Init+0x17c>
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	4a19      	ldr	r2, [pc, #100]	; (8000444 <GPIO_Init+0x19c>)
 80003e0:	4293      	cmp	r3, r2
 80003e2:	d01d      	beq.n	8000420 <GPIO_Init+0x178>
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	4a17      	ldr	r2, [pc, #92]	; (8000448 <GPIO_Init+0x1a0>)
 80003ea:	4293      	cmp	r3, r2
 80003ec:	d016      	beq.n	800041c <GPIO_Init+0x174>
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	4a16      	ldr	r2, [pc, #88]	; (800044c <GPIO_Init+0x1a4>)
 80003f4:	4293      	cmp	r3, r2
 80003f6:	d00f      	beq.n	8000418 <GPIO_Init+0x170>
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	4a14      	ldr	r2, [pc, #80]	; (8000450 <GPIO_Init+0x1a8>)
 80003fe:	4293      	cmp	r3, r2
 8000400:	d008      	beq.n	8000414 <GPIO_Init+0x16c>
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	681b      	ldr	r3, [r3, #0]
 8000406:	4a13      	ldr	r2, [pc, #76]	; (8000454 <GPIO_Init+0x1ac>)
 8000408:	4293      	cmp	r3, r2
 800040a:	d101      	bne.n	8000410 <GPIO_Init+0x168>
 800040c:	2308      	movs	r3, #8
 800040e:	e024      	b.n	800045a <GPIO_Init+0x1b2>
 8000410:	2300      	movs	r3, #0
 8000412:	e022      	b.n	800045a <GPIO_Init+0x1b2>
 8000414:	2307      	movs	r3, #7
 8000416:	e020      	b.n	800045a <GPIO_Init+0x1b2>
 8000418:	2306      	movs	r3, #6
 800041a:	e01e      	b.n	800045a <GPIO_Init+0x1b2>
 800041c:	2305      	movs	r3, #5
 800041e:	e01c      	b.n	800045a <GPIO_Init+0x1b2>
 8000420:	2304      	movs	r3, #4
 8000422:	e01a      	b.n	800045a <GPIO_Init+0x1b2>
 8000424:	2303      	movs	r3, #3
 8000426:	e018      	b.n	800045a <GPIO_Init+0x1b2>
 8000428:	2302      	movs	r3, #2
 800042a:	e016      	b.n	800045a <GPIO_Init+0x1b2>
 800042c:	2301      	movs	r3, #1
 800042e:	e014      	b.n	800045a <GPIO_Init+0x1b2>
 8000430:	40013c00 	.word	0x40013c00
 8000434:	40020000 	.word	0x40020000
 8000438:	40020400 	.word	0x40020400
 800043c:	40020800 	.word	0x40020800
 8000440:	40020c00 	.word	0x40020c00
 8000444:	40021000 	.word	0x40021000
 8000448:	40021400 	.word	0x40021400
 800044c:	40021800 	.word	0x40021800
 8000450:	40021c00 	.word	0x40021c00
 8000454:	40022000 	.word	0x40022000
 8000458:	2300      	movs	r3, #0
 800045a:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 800045c:	4b60      	ldr	r3, [pc, #384]	; (80005e0 <GPIO_Init+0x338>)
 800045e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000460:	4a5f      	ldr	r2, [pc, #380]	; (80005e0 <GPIO_Init+0x338>)
 8000462:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000466:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 8000468:	7c7a      	ldrb	r2, [r7, #17]
 800046a:	7cbb      	ldrb	r3, [r7, #18]
 800046c:	009b      	lsls	r3, r3, #2
 800046e:	fa02 f103 	lsl.w	r1, r2, r3
 8000472:	4a5c      	ldr	r2, [pc, #368]	; (80005e4 <GPIO_Init+0x33c>)
 8000474:	7cfb      	ldrb	r3, [r7, #19]
 8000476:	3304      	adds	r3, #4
 8000478:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		//3. enable the EXTI interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800047c:	4b5a      	ldr	r3, [pc, #360]	; (80005e8 <GPIO_Init+0x340>)
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	687a      	ldr	r2, [r7, #4]
 8000482:	7912      	ldrb	r2, [r2, #4]
 8000484:	4611      	mov	r1, r2
 8000486:	2201      	movs	r2, #1
 8000488:	408a      	lsls	r2, r1
 800048a:	4611      	mov	r1, r2
 800048c:	4a56      	ldr	r2, [pc, #344]	; (80005e8 <GPIO_Init+0x340>)
 800048e:	430b      	orrs	r3, r1
 8000490:	6013      	str	r3, [r2, #0]
	}
	//2. configure the speed
	temp = 0;
 8000492:	2300      	movs	r3, #0
 8000494:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	799b      	ldrb	r3, [r3, #6]
 800049a:	461a      	mov	r2, r3
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	791b      	ldrb	r3, [r3, #4]
 80004a0:	005b      	lsls	r3, r3, #1
 80004a2:	fa02 f303 	lsl.w	r3, r2, r3
 80004a6:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	689a      	ldr	r2, [r3, #8]
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	791b      	ldrb	r3, [r3, #4]
 80004b2:	4619      	mov	r1, r3
 80004b4:	2303      	movs	r3, #3
 80004b6:	408b      	lsls	r3, r1
 80004b8:	43db      	mvns	r3, r3
 80004ba:	4619      	mov	r1, r3
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	681b      	ldr	r3, [r3, #0]
 80004c0:	400a      	ands	r2, r1
 80004c2:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	681b      	ldr	r3, [r3, #0]
 80004c8:	6899      	ldr	r1, [r3, #8]
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	681b      	ldr	r3, [r3, #0]
 80004ce:	697a      	ldr	r2, [r7, #20]
 80004d0:	430a      	orrs	r2, r1
 80004d2:	609a      	str	r2, [r3, #8]

	//3. configure the pupd settings.
	temp = 0;
 80004d4:	2300      	movs	r3, #0
 80004d6:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	79db      	ldrb	r3, [r3, #7]
 80004dc:	461a      	mov	r2, r3
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	791b      	ldrb	r3, [r3, #4]
 80004e2:	005b      	lsls	r3, r3, #1
 80004e4:	fa02 f303 	lsl.w	r3, r2, r3
 80004e8:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	68da      	ldr	r2, [r3, #12]
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	791b      	ldrb	r3, [r3, #4]
 80004f4:	4619      	mov	r1, r3
 80004f6:	2303      	movs	r3, #3
 80004f8:	408b      	lsls	r3, r1
 80004fa:	43db      	mvns	r3, r3
 80004fc:	4619      	mov	r1, r3
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	681b      	ldr	r3, [r3, #0]
 8000502:	400a      	ands	r2, r1
 8000504:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	68d9      	ldr	r1, [r3, #12]
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	697a      	ldr	r2, [r7, #20]
 8000512:	430a      	orrs	r2, r1
 8000514:	60da      	str	r2, [r3, #12]

	//4. configure the optype
	temp = 0;
 8000516:	2300      	movs	r3, #0
 8000518:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	7a1b      	ldrb	r3, [r3, #8]
 800051e:	461a      	mov	r2, r3
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	791b      	ldrb	r3, [r3, #4]
 8000524:	005b      	lsls	r3, r3, #1
 8000526:	fa02 f303 	lsl.w	r3, r2, r3
 800052a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	681b      	ldr	r3, [r3, #0]
 8000530:	685a      	ldr	r2, [r3, #4]
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	791b      	ldrb	r3, [r3, #4]
 8000536:	4619      	mov	r1, r3
 8000538:	2301      	movs	r3, #1
 800053a:	408b      	lsls	r3, r1
 800053c:	43db      	mvns	r3, r3
 800053e:	4619      	mov	r1, r3
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	400a      	ands	r2, r1
 8000546:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	681b      	ldr	r3, [r3, #0]
 800054c:	6859      	ldr	r1, [r3, #4]
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	681b      	ldr	r3, [r3, #0]
 8000552:	697a      	ldr	r2, [r7, #20]
 8000554:	430a      	orrs	r2, r1
 8000556:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode == GPIO_MODE_ALTFN)
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	7a5b      	ldrb	r3, [r3, #9]
 800055c:	2b02      	cmp	r3, #2
 800055e:	d138      	bne.n	80005d2 <GPIO_Init+0x32a>
	{
		uint32_t temp1, temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	791b      	ldrb	r3, [r3, #4]
 8000564:	08db      	lsrs	r3, r3, #3
 8000566:	b2db      	uxtb	r3, r3
 8000568:	60fb      	str	r3, [r7, #12]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	791b      	ldrb	r3, [r3, #4]
 800056e:	f003 0307 	and.w	r3, r3, #7
 8000572:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xFF << (4 * temp2));
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	681a      	ldr	r2, [r3, #0]
 8000578:	68fb      	ldr	r3, [r7, #12]
 800057a:	3308      	adds	r3, #8
 800057c:	009b      	lsls	r3, r3, #2
 800057e:	4413      	add	r3, r2
 8000580:	685b      	ldr	r3, [r3, #4]
 8000582:	68ba      	ldr	r2, [r7, #8]
 8000584:	0092      	lsls	r2, r2, #2
 8000586:	21ff      	movs	r1, #255	; 0xff
 8000588:	fa01 f202 	lsl.w	r2, r1, r2
 800058c:	43d2      	mvns	r2, r2
 800058e:	4610      	mov	r0, r2
 8000590:	687a      	ldr	r2, [r7, #4]
 8000592:	6811      	ldr	r1, [r2, #0]
 8000594:	ea03 0200 	and.w	r2, r3, r0
 8000598:	68fb      	ldr	r3, [r7, #12]
 800059a:	3308      	adds	r3, #8
 800059c:	009b      	lsls	r3, r3, #2
 800059e:	440b      	add	r3, r1
 80005a0:	605a      	str	r2, [r3, #4]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	681a      	ldr	r2, [r3, #0]
 80005a6:	68fb      	ldr	r3, [r7, #12]
 80005a8:	3308      	adds	r3, #8
 80005aa:	009b      	lsls	r3, r3, #2
 80005ac:	4413      	add	r3, r2
 80005ae:	685b      	ldr	r3, [r3, #4]
 80005b0:	687a      	ldr	r2, [r7, #4]
 80005b2:	7a52      	ldrb	r2, [r2, #9]
 80005b4:	4611      	mov	r1, r2
 80005b6:	68ba      	ldr	r2, [r7, #8]
 80005b8:	0092      	lsls	r2, r2, #2
 80005ba:	fa01 f202 	lsl.w	r2, r1, r2
 80005be:	4610      	mov	r0, r2
 80005c0:	687a      	ldr	r2, [r7, #4]
 80005c2:	6811      	ldr	r1, [r2, #0]
 80005c4:	ea43 0200 	orr.w	r2, r3, r0
 80005c8:	68fb      	ldr	r3, [r7, #12]
 80005ca:	3308      	adds	r3, #8
 80005cc:	009b      	lsls	r3, r3, #2
 80005ce:	440b      	add	r3, r1
 80005d0:	605a      	str	r2, [r3, #4]
	}
}
 80005d2:	bf00      	nop
 80005d4:	371c      	adds	r7, #28
 80005d6:	46bd      	mov	sp, r7
 80005d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005dc:	4770      	bx	lr
 80005de:	bf00      	nop
 80005e0:	40023800 	.word	0x40023800
 80005e4:	40013800 	.word	0x40013800
 80005e8:	40013c00 	.word	0x40013c00

080005ec <__libc_init_array>:
 80005ec:	b570      	push	{r4, r5, r6, lr}
 80005ee:	4d0d      	ldr	r5, [pc, #52]	; (8000624 <__libc_init_array+0x38>)
 80005f0:	4c0d      	ldr	r4, [pc, #52]	; (8000628 <__libc_init_array+0x3c>)
 80005f2:	1b64      	subs	r4, r4, r5
 80005f4:	10a4      	asrs	r4, r4, #2
 80005f6:	2600      	movs	r6, #0
 80005f8:	42a6      	cmp	r6, r4
 80005fa:	d109      	bne.n	8000610 <__libc_init_array+0x24>
 80005fc:	4d0b      	ldr	r5, [pc, #44]	; (800062c <__libc_init_array+0x40>)
 80005fe:	4c0c      	ldr	r4, [pc, #48]	; (8000630 <__libc_init_array+0x44>)
 8000600:	f000 f818 	bl	8000634 <_init>
 8000604:	1b64      	subs	r4, r4, r5
 8000606:	10a4      	asrs	r4, r4, #2
 8000608:	2600      	movs	r6, #0
 800060a:	42a6      	cmp	r6, r4
 800060c:	d105      	bne.n	800061a <__libc_init_array+0x2e>
 800060e:	bd70      	pop	{r4, r5, r6, pc}
 8000610:	f855 3b04 	ldr.w	r3, [r5], #4
 8000614:	4798      	blx	r3
 8000616:	3601      	adds	r6, #1
 8000618:	e7ee      	b.n	80005f8 <__libc_init_array+0xc>
 800061a:	f855 3b04 	ldr.w	r3, [r5], #4
 800061e:	4798      	blx	r3
 8000620:	3601      	adds	r6, #1
 8000622:	e7f2      	b.n	800060a <__libc_init_array+0x1e>
 8000624:	0800064c 	.word	0x0800064c
 8000628:	0800064c 	.word	0x0800064c
 800062c:	0800064c 	.word	0x0800064c
 8000630:	08000650 	.word	0x08000650

08000634 <_init>:
 8000634:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000636:	bf00      	nop
 8000638:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800063a:	bc08      	pop	{r3}
 800063c:	469e      	mov	lr, r3
 800063e:	4770      	bx	lr

08000640 <_fini>:
 8000640:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000642:	bf00      	nop
 8000644:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000646:	bc08      	pop	{r3}
 8000648:	469e      	mov	lr, r3
 800064a:	4770      	bx	lr
